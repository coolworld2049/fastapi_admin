version: '3.9'

services:


  db:
    image: postgres:15
    env_file:
      - .env
    environment:
      - PGPORT=${PG_PORT:-5432}
      - PGTZ=${TZ:-UTC}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - ${PG_PORT}:${PG_PORT}


  app:
    build:
      context: backend
      dockerfile: backend.dockerfile
    command: ./start.sh
    env_file:
      - .env
    environment:
      - PG_HOST=db
      - REDIS_HOST=redis
      - RABBITMQ_HOST=queue
      - SERVER_NAME=${DOMAIN}
      - SERVER_HOST=https://${DOMAIN}
    depends_on:
      - db
    volumes:
      - ./app:/app
    ports:
      - ${PORT}:${PORT}


  queue:
    image: rabbitmq:3-management
    env_file:
      - .env
    environment:
      - RABBITMQ_HOST=queue
    ports:
      - ${RABBITMQ_PORT}:${RABBITMQ_PORT}
      - ${RABBITMQ_HTTP_PORT}:${RABBITMQ_HTTP_PORT}


  flower:
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=pyamqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@queue:${RABBITMQ_PORT}/
      - FLOWER_PORT=5555
    ports:
      - ${FLOWER_PORT}:${FLOWER_PORT}
    depends_on:
      - queue


  redis:
    image: redislabs/redismod
    expose:
      - ${REDIS_PORT}


  redisinsight:
    image: redislabs/redisinsight:latest
    ports:
      - ${REDIS_INSIGHT_PORT}:${REDIS_INSIGHT_PORT}


  celeryworker:
    build:
      context: backend
      dockerfile: celeryworker.dockerfile
    depends_on:
      - db
      - queue
      - redis
    env_file:
      - .env
    environment:
      - PG_HOST=db
      - REDIS_HOST=redis
      - RABBITMQ_HOST=queue
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=https://${DOMAIN?Variable not set}


  grafana:
    image: grafana/grafana:latest
    env_file:
      - .env
    ports:
      - ${GF_PORT}:${GF_PORT}


  frontend:
    build:
      context: ./frontend
      args:
        FRONTEND_ENV: ${FRONTEND_ENV-production}

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - ${PORT}:80
    depends_on:
      - app
      - frontend

volumes:
  postgres-data:
  grafana-data:
    external: true
